package create.prototype;

/**
 * 原型模式：Prototype
 * 模式意图：
 * 由于有些时候，需要在运行时指定对象是哪个类的实例，此时用工厂模式就有些力不从心了，
 * 通过原型模式就可以通过拷贝函数clone一个原有的对象，给现在的对象使用，从而创建更多的同类型的对象
 * 模式结构：
 * 【简单原型模式】
 * 【登记模式的原型模式】
 * Prototype 原型接口，定义原型的结构  ConcretePrototype 原型的具体实现
 * Client 使用类，创建一个原型，创建一个引用，可以随意指定要引用的实现类
 * PrototypeManager 原型的管理器，里面含有一个Map，用来保存原型的实例对象
 * 使用场景：
 * 1 当需要在运行时指定对象的实现类时
 * 2 当一个类的实例只能有集中状态的一种时
 */
public interface Prototype {
}
